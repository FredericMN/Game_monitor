import pandas as pd
import os

# 定义列名
columns = [
    '日期', '游戏名称', '状态', '厂商', '类型',
    '评分', '出版单位', '运营单位', '文号', '出版物号',
    '版号获批时间', '游戏类型', '申报类别', '是否多个结果',
    '游戏简介', '来源渠道', '渠道链接'
]

# 创建示例数据 (字典列表)
sample_data = [
    {
        '日期': '2024-07-29', '游戏名称': '星之守护者', '状态': '正式上线', '厂商': '幻想科技', '类型': 'MMORPG',
        '评分': 8.5, '出版单位': '宇宙出版社', '运营单位': '银河互动', '文号': '新出审字〔2024〕1234号', '出版物号': 'ISBN 978-7-000-00000-0',
        '版号获批时间': '2024-01-15', '游戏类型': '客户端', '申报类别': '国产游戏', '是否多个结果': '否',
        '游戏简介': '一款史诗级的多人在线角色扮演游戏，探索广阔的星际世界。', '来源渠道': '官网', '渠道链接': 'http://example.com/xzg'
    },
    {
        '日期': '2024-08-15', '游戏名称': '方块冒险记', '状态': '开启删档测试', '厂商': '像素工坊', '类型': '沙盒, 冒险',
        '评分': None, '出版单位': '方块出版社', '运营单位': '方块游戏', '文号': '新出审字〔2024〕5678号', '出版物号': 'ISBN 978-7-000-00001-7',
        '版号获批时间': '2024-03-20', '游戏类型': '移动', '申报类别': '国产游戏', '是否多个结果': '否',
        '游戏简介': '在无限的方块世界中建造、探索和生存。', '来源渠道': '官方公告', '渠道链接': 'http://example.com/fkmx'
    },
     {
        '日期': '2024-09-01', '游戏名称': '代号：未来', '状态': '发布首部预告片', '厂商': '赛博动力', '类型': '科幻, FPS',
        '评分': None, '出版单位': None, '运营单位': '赛博动力', '文号': None, '出版物号': None,
        '版号获批时间': None, '游戏类型': '客户端', '申报类别': '国产游戏', '是否多个结果': '是',
        '游戏简介': '一款设定在未来都市的第一人称射击游戏。', '来源渠道': '游戏发布会', '渠道链接': 'http://example.com/dhwl'
    },
     {
        '日期': '2023-11-11', '游戏名称': '萌宠乐园', '状态': '版本更新 1.5', '厂商': '可爱互动', '类型': '休闲, 模拟经营',
        '评分': 7.8, '出版单位': '欢乐出版社', '运营单位': '可爱互动', '文号': '新出审字〔2023〕9999号', '出版物号': 'ISBN 978-7-000-00002-4',
        '版号获批时间': '2023-05-10', '游戏类型': '移动', '申报类别': '国产游戏', '是否多个结果': '否',
        '游戏简介': '收集和培养各种可爱的宠物，打造你的专属乐园。', '来源渠道': '应用商店更新日志', '渠道链接': 'http://example.com/mcly'
    }
]

# 将数据转换为 DataFrame
df = pd.DataFrame(sample_data, columns=columns)

# 定义输出目录和文件名
output_dir = 'data'
output_file = os.path.join(output_dir, 'sample_games.xlsx')

# 确保输出目录存在
if not os.path.exists(output_dir):
    os.makedirs(output_dir)

# 保存 DataFrame 到 Excel 文件
# index=False 表示不将 DataFrame 的索引写入 Excel 文件
# engine='openpyxl' 明确指定使用 openpyxl 引擎
try:
    df.to_excel(output_file, sheet_name='Sheet1', index=False, engine='openpyxl')
    print(f"示例 Excel 文件已成功生成在: {output_file}")
except Exception as e:
    print(f"生成 Excel 文件时出错: {e}") 